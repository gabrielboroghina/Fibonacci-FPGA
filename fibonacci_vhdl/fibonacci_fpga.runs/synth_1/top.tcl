# 
# Synthesis run script generated by Vivado
# 

proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
set_msg_config -id {Synth 8-256} -limit 10000
set_msg_config -id {Synth 8-638} -limit 10000
create_project -in_memory -part xc7a100tcsg324-1

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_property webtalk.parent_dir C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.cache/wt [current_project]
set_property parent.project_path C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.xpr [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language VHDL [current_project]
set_property ip_output_repo c:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.cache/ip [current_project]
set_property ip_cache_permissions {read write} [current_project]
read_vhdl -library xil_defaultlib {
  C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.srcs/sources_1/new/CLA_4.vhd
  C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.srcs/sources_1/new/LCU.vhd
  C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.srcs/sources_1/new/adder_CLA_8bit.vhd
  C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.srcs/sources_1/new/bcd2_to_bin.vhd
  C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.srcs/sources_1/new/bcd_to_cathodes.vhd
  C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.srcs/sources_1/new/bin_to_bcd_10.vhd
  C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.srcs/sources_1/new/clk_divider.vhd
  C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.srcs/sources_1/new/display_7seg.vhd
  C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.srcs/sources_1/new/fibonacci.vhd
  C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.srcs/sources_1/new/register.vhd
  C:/Users/gabri/Desktop/CN/fibonacci_fpga/fibonacci_fpga.srcs/sources_1/new/top.vhd
}
# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}
read_xdc C:/Users/gabri/Downloads/Nexys4DDR_Master.xdc
set_property used_in_implementation false [get_files C:/Users/gabri/Downloads/Nexys4DDR_Master.xdc]


synth_design -top top -part xc7a100tcsg324-1


# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef top.dcp
create_report "synth_1_synth_report_utilization_0" "report_utilization -file top_utilization_synth.rpt -pb top_utilization_synth.pb"
